import React, { useState } from 'react';
import './Contact.css';

interface ContactForm {
  name: string;
  email: string;
  subject: string;
  message: string;
}

const Contact: React.FC = () => {
  const [formData, setFormData] = useState<ContactForm>({
    name: '',
    email: '',
    subject: '',
    message: ''
  });

  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmitStatus('idle');

    // Simulate form submission
    try {
      await new Promise(resolve => setTimeout(resolve, 2000));
      setSubmitStatus('success');
      setFormData({ name: '', email: '', subject: '', message: '' });
    } catch (error) {
      setSubmitStatus('error');
    } finally {
      setIsSubmitting(false);
    }
  };

  const socialLinks = [
    { name: 'GitHub', icon: 'üêô', url: 'https://github.com' },
    { name: 'LinkedIn', icon: 'üíº', url: 'https://linkedin.com' },
    { name: 'Twitter', icon: 'üê¶', url: 'https://twitter.com' },
    { name: 'Email', icon: 'üìß', url: 'mailto:contact@example.com' }
  ];

  return (
    <section id="contact" className="contact section">
      <div className="container">
        <h2 className="section-title">Li√™n H·ªá</h2>
        
        <div className="contact-content">
          <div className="contact-info">
            <h3>H√£y li√™n h·ªá v·ªõi t√¥i!</h3>
            <p>
              T√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe nh·ªØng √Ω t∆∞·ªüng m·ªõi v√† c∆° h·ªôi h·ª£p t√°c th√∫ v·ªã. 
              H√£y g·ª≠i tin nh·∫Øn cho t√¥i n·∫øu b·∫°n mu·ªën th·∫£o lu·∫≠n v·ªÅ d·ª± √°n ho·∫∑c ch·ªâ ƒë∆°n gi·∫£n l√† mu·ªën k·∫øt n·ªëi.
            </p>
            
            <div className="contact-details">
              <div className="contact-item">
                <span className="contact-icon">üìç</span>
                <div>
                  <h4>ƒê·ªãa ch·ªâ</h4>
                  <p>H√† N·ªôi, Vi·ªát Nam</p>
                </div>
              </div>
              
              <div className="contact-item">
                <span className="contact-icon">üìß</span>
                <div>
                  <h4>Email</h4>
                  <p>contact@example.com</p>
                </div>
              </div>
              
              <div className="contact-item">
                <span className="contact-icon">üì±</span>
                <div>
                  <h4>ƒêi·ªán tho·∫°i</h4>
                  <p>+84 123 456 789</p>
                </div>
              </div>
            </div>

            <div className="social-links">
              <h4>Theo d√µi t√¥i</h4>
              <div className="social-icons">
                {socialLinks.map(social => (
                  <a
                    key={social.name}
                    href={social.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="social-icon"
                    title={social.name}
                  >
                    <span>{social.icon}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>

          <div className="contact-form-container">
            <form className="contact-form" onSubmit={handleSubmit}>
              <div className="form-group">
                <label htmlFor="name">H·ªç v√† t√™n *</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  required
                  placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                />
              </div>

              <div className="form-group">
                <label htmlFor="email">Email *</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  required
                  placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                />
              </div>

              <div className="form-group">
                <label htmlFor="subject">Ti√™u ƒë·ªÅ</label>
                <input
                  type="text"
                  id="subject"
                  name="subject"
                  value={formData.subject}
                  onChange={handleInputChange}
                  placeholder="Nh·∫≠p ti√™u ƒë·ªÅ tin nh·∫Øn"
                />
              </div>

              <div className="form-group">
                <label htmlFor="message">Tin nh·∫Øn *</label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  required
                  rows={5}
                  placeholder="Nh·∫≠p n·ªôi dung tin nh·∫Øn c·ªßa b·∫°n"
                ></textarea>
              </div>

              <button 
                type="submit" 
                className="btn btn-primary submit-btn"
                disabled={isSubmitting}
              >
                {isSubmitting ? 'ƒêang g·ª≠i...' : 'G·ª≠i tin nh·∫Øn'}
              </button>

              {submitStatus === 'success' && (
                <div className="success-message">
                  ‚úÖ Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng! T√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ.
                </div>
              )}

              {submitStatus === 'error' && (
                <div className="error-message">
                  ‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.
                </div>
              )}
            </form>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact; 